<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2024-05-01T18:32:00+09:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>GAE gen1 で動いている PHP5.5 で作った個人開発サービスを gen2 PHP8.2 へ移行した1年記 〜 その 5</title>
    <link rel="alternate" href="http://blog.url.com/2024/05/01/story-for-migrate-hobby-web-service-while-a-year-part-5.html"/>
    <id>http://blog.url.com/2024/05/01/story-for-migrate-hobby-web-service-while-a-year-part-5.html</id>
    <published>2024-05-01T18:32:00+09:00</published>
    <updated>2024-05-01T19:19:25+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;この記事は &lt;a href="2024/04/30/story-for-migrate-hobby-web-service-while-a-year-part-4.html"&gt;GAE gen1 で動いている PHP5.5 で作った個人開発サービスを gen2 PHP8.2 へ移行した1年記 〜 その 4&lt;/a&gt; の続編となります。&lt;/p&gt;

&lt;h3&gt;GAEにデプロイして動作確認しながら修正&lt;/h3&gt;

&lt;p&gt;前回で Slim4 へ移行でき、少し動く様になってきたので動作確認しながら微修正していきます。&lt;/p&gt;

&lt;h4&gt;GAE 2nd gen 用の設定変更&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;app.yml&lt;/code&gt; ファイルに定義していたデプロイ対象外ファイルの一覧 &lt;code&gt;skip_files&lt;/code&gt; は別のファイル &lt;code&gt;.gcloudignore&lt;/code&gt; に記述するように変更になったので、定義を移行しました。その&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/20/commits/98ec0f6157778a1b37807664193d1ee0afc56ec1"&gt;コミット&lt;/a&gt;。&lt;/p&gt;

&lt;h4&gt;Carbon のバージョンアップ&lt;/h4&gt;

&lt;p&gt;8.2 環境で動くように Carbon を 1.21 から 2.72 にアプデしました。その&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/20/commits/f33a78013a00996a30de76849abe76d40e404b1b"&gt;コミット&lt;/a&gt;。&lt;/p&gt;

&lt;h4&gt;composer ファイルをデプロイ対象に追加&lt;/h4&gt;

&lt;p&gt;GAE 2nd gen からは composer での依存関係はGAEデプロイ時に解決されるので、デプロイ対象ファイルに composer.json と composer.lock ファイルを追加しました。その&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/20/commits/33bfe6f232d1b4794a6a27cfc0ceed139159615b"&gt;コミット&lt;/a&gt;。&lt;/p&gt;

&lt;h4&gt;ミドルウェアの定義を変更&lt;/h4&gt;

&lt;p&gt;ミドルウェアがうまく動作していないことがわかったので、調べていると書き方が変わっていることに気づきました。すでにパラメータは変更していたのですが、実行メソッド名も変更になっていました。&lt;/p&gt;

&lt;p&gt;そこでt PHP5.5 のときは interface を実装するコードになっていなかったので、ちゃんと &lt;code&gt;MiddlewareInterface&lt;/code&gt; を実装するようなコードに修正。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Psr\Http\Server\MiddlewareInterface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AllowedProvidersMiddleware&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;AllowedProvidersMiddleware&lt;/span&gt; &lt;span class="kd"&gt;implements&lt;/span&gt; &lt;span class="nc"&gt;MiddlewareInterface&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;そうすると、以前は &lt;code&gt;__invoke&lt;/code&gt; メソッドで定義していたところを &lt;code&gt;process&lt;/code&gt; に変更する必要があることがわかりました。
その修正&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/20/commits/6e737549267d4f231cc5894f88f00bd91cbf9862"&gt;コミット&lt;/a&gt;。&lt;/p&gt;

&lt;h4&gt;セッションの処理も修正&lt;/h4&gt;

&lt;p&gt;さきほどのコミットでは、セッション保持の Memcache がうまく動作していなかったので、いったん &lt;code&gt;session_set_save_handler&lt;/code&gt; はコメントアウトして、デフォルトの tmp 管理にしています。ただ複数インスタンス起動するとうまく動作しなくなるので、いったん動作確認を進める上での暫定対応です。&lt;/p&gt;

&lt;p&gt;またセッションミドルウェアも全体に対して有効にするのでなく、セッションが必要なAPI（ここでいうと管理画面のログイン周辺）についてだけ有効にするようにルーティングを変更しています。&lt;/p&gt;

&lt;p&gt;その後、Google Cloud の Cloud Datastore に &lt;code&gt;DatastoreSessionHandler&lt;/code&gt; というものがあるのがわかり、以下のように設定を変更しました。その&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/20/commits/d85b82286d6ec844c6e73144cbcd889d3ae8ff52"&gt;コミット&lt;/a&gt;。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Google\Cloud\Datastore\DatastoreClient&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Google\Cloud\Datastore\DatastoreSessionHandler&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="nv"&gt;$datastore&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DatastoreClient&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="nv"&gt;$handler&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;DatastoreSessionHandler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$datastore&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;session_set_save_handler&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$handler&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nb"&gt;session_save_path&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'sessions'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;POST のボディに JSON を渡す場合の対応&lt;/h4&gt;

&lt;p&gt;Slim4 では &lt;code&gt;addBodyParsingMiddleware&lt;/code&gt; を利用する必要があったので、修正しました。その&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/20/commits/376485104e1ac12a28b749dfc911506f57bcc27d"&gt;コミット&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;併せて BASIC 認証時の before 処理も不要であることがわかったので削除しています。&lt;/p&gt;

&lt;h3&gt;GAE へのデプロイ方法を README に追記&lt;/h3&gt;

&lt;p&gt;GAE 2nd gen からはビルド結果を以下のコマンドでデプロイします。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight plaintext"&gt;&lt;code&gt;gcloud app deploy --project toiletevolution --version 2 --no-promote --appyaml=app.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code&gt;version&lt;/code&gt; を指定して新しいバージョンで動作確認を可能にして、 &lt;code&gt;--no-promote&lt;/code&gt; をつけることで従来のURLからのアクセスは、新しいバージョンに振り分けられない様にします。&lt;/p&gt;

&lt;h3&gt;そしてどうなったか&lt;/h3&gt;

&lt;p&gt;この記事は PHP のバージョンアップをメインにしているのですが、実際には WebComponents 側も修正しています。&lt;/p&gt;

&lt;p&gt;そしてシュミレータで一ヶ月ぐらいの稼働テストを実施して、問題なさそうだったので某日に正式リリースを実施しました。
その後、新しいバージョンでの問題も発生せず順調に動いています。&lt;/p&gt;

&lt;p&gt;これでしばらくは落ち着くのと、バージョンアップ追従もどんどんできるようになっていくので安心です。&lt;/p&gt;

&lt;p&gt;ブログの記事にまとめてみると、そんなに大変な修正でもなかったな？という感じですが、当時は久々に PHP 触ったりするのもあり、結構大変でした。&lt;/p&gt;

&lt;p&gt;今後は phpstan とか入れたりして、コードの品質も上げていければなと思っています。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>GAE gen1 で動いている PHP5.5 で作った個人開発サービスを gen2 PHP8.2 へ移行した1年記 〜 その 4</title>
    <link rel="alternate" href="http://blog.url.com/2024/04/30/story-for-migrate-hobby-web-service-while-a-year-part-4.html"/>
    <id>http://blog.url.com/2024/04/30/story-for-migrate-hobby-web-service-while-a-year-part-4.html</id>
    <published>2024-04-30T13:52:00+09:00</published>
    <updated>2024-04-30T15:37:24+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;この記事は &lt;a href="2024/04/30/story-for-migrate-hobby-web-service-while-a-year-part-3.html"&gt;GAE gen1 で動いている PHP5.5 で作った個人開発サービスを gen2 PHP8.2 へ移行した1年記 〜 その 3&lt;/a&gt; の続編となります。&lt;/p&gt;

&lt;h3&gt;PHP 8.2 で実行できるように修正していく&lt;/h3&gt;

&lt;p&gt;ひとまずロジック部分については 8.2 環境で PHPUnit でテストできるようになり、CI も動作するようになったので、アプリケーションを起動して動くのかを試していきたいと思います。&lt;/p&gt;

&lt;h4&gt;Memcache の残りを移行する&lt;/h4&gt;

&lt;p&gt;Memcache は Redis に移行したのですが、単体テスト外の部分にも少し残っていたので、&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/20/commits/febd6d51eea461b5aa44504102fcb10d1d746c29"&gt;こちらのコミット&lt;/a&gt; で対応しました。&lt;/p&gt;

&lt;p&gt;移行方法は &lt;a href="2024/03/20/story-for-migrate-hobby-web-service-while-a-year-part-2.html"&gt;GAE gen1 で動いている PHP5.5 で作った個人開発サービスを gen2 PHP8.2 へ移行した1年記 〜 その 2&lt;/a&gt; でも実施した内容なのですが、DI 部分と設定ファイルのデフォルト値、READMEの説明を修正しました。&lt;/p&gt;

&lt;h4&gt;GAE のアプリケーションバージョンを新しく設定する&lt;/h4&gt;

&lt;p&gt;GAE では通常のトラフィックを古いバージョンへ向けて、新しいバージョンもデプロイして別のURLから実行できるようにする機能があります。
dev_appserver.py での実行が困難になっているので、新しいバージョンを GAE にデプロイして動作するのかを検証していくことにしました。&lt;/p&gt;

&lt;p&gt;今回はバージョン2として&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/20/commits/6e8416cf0bf26c06bce2125e357b16d429bdec4e"&gt;修正&lt;/a&gt;しました。&lt;/p&gt;

&lt;p&gt;GAE で動かすにあたり php.ini も変更が必要だったので、拡張に redis を追加して&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/20/commits/5b827d53174e8f3c87ea00afcda4e1a6ee21636d"&gt;修正&lt;/a&gt;しました&lt;/p&gt;

&lt;h4&gt;デプロイして動かしてみる&lt;/h4&gt;

&lt;p&gt;全然動きませんな  (^^;;&lt;/p&gt;

&lt;p&gt;まず問題を切り分けるために、まだビジネスロジックに分岐できていなかったデバイス値の取得処理を Google Cloud Storage から取得する処理をテスト可能なサービスとしてリファクタリングしました。&lt;/p&gt;

&lt;p&gt;あとセッションの保存場所を設定する必要があったので、いったん &lt;code&gt;php.ini&lt;/code&gt; に &lt;code&gt;session.save_path=Google\AppEngine\Api\Memcache\Memcache&lt;/code&gt; を追加しました。&lt;/p&gt;

&lt;p&gt;依存のライブラリもいくつか PHP 8.2 環境だと動かないものがあったのでアップデート。&lt;/p&gt;

&lt;p&gt;いったんそれらの修正コミットが&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/20/commits/ba9be14f65cc75fdc6604fde328192a3ec125b57"&gt;こちら&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;で、いろいろやっていくうちに、そもそも slim3 だと PHP 8系で動かないな&amp;hellip;という基本的なところに気づきました（さいしょから考えておけよという話）。&lt;/p&gt;

&lt;h3&gt;Slim3 から Slim4 に移行していく&lt;/h3&gt;

&lt;p&gt;幸いなことにこちらに関してはインターネットに移行記事がたくさんあり、とても参考になりました。&lt;/p&gt;

&lt;p&gt;今回の移行に関するコミットが&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/20/commits/f0aed649629a24bad6f4dbbf4b0f724415569a33"&gt;こちら&lt;/a&gt;です。&lt;/p&gt;

&lt;h4&gt;依存関係の更新&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;slim 3.1 を 4.12 に&lt;/li&gt;
&lt;li&gt;monolog のアプデ&lt;/li&gt;
&lt;li&gt;BASIC認証のライブラリ &lt;code&gt;tuupola/slim-basic-auth&lt;/code&gt; のアプデ&lt;/li&gt;
&lt;li&gt;セッションミドルウェア &lt;code&gt;akrabat/rka-slim-session-middleware&lt;/code&gt; のアプデ&lt;/li&gt;
&lt;li&gt;PSR7実行が外部依存になったので &lt;code&gt;slim/psr7&lt;/code&gt; の追加&lt;/li&gt;
&lt;li&gt;DI が外部依存になったので &lt;code&gt;php-di/php-di&lt;/code&gt; の追加&lt;/li&gt;
&lt;li&gt;Google Cloud Storage がランタイム外になったので &lt;code&gt;google/cloud-storage&lt;/code&gt; の追加&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;php-di への移行&lt;/h4&gt;

&lt;p&gt;もともとは Slim3 のアプリケーションコンテナを使っていたので、こんな感じでやっていたのを&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Instantiate the app&lt;/span&gt;
&lt;span class="nv"&gt;$settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/src/settings.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nf"&gt;Slim\App&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$settings&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;以下のように変更しました。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;DI\Container&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$settings&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/src/settings.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Container&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nv"&gt;$container&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'settings'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$settings&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'settings'&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;続いてDIコンテナの初期化処理化を&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/src/dependencies.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;のように指定していたのを&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Slim\Factory\AppFactory&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="nv"&gt;$dependencies&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/src/dependencies.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$container&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$dependencies&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$container&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nc"&gt;AppFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;setContainer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$container&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="nv"&gt;$app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nc"&gt;AppFactory&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="nf"&gt;create&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;このように変更しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;コンテナを初期化&lt;/li&gt;
&lt;li&gt;環境設定の注入やコンテナの初期化を実行&lt;/li&gt;
&lt;li&gt;AppFactory でアプリケーション初期化&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;のような実装に変わります。&lt;/p&gt;

&lt;h4&gt;Slim4 っぽい書き方に変更&lt;/h4&gt;

&lt;p&gt;もともとは&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Register middleware&lt;/span&gt;
&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/src/middleware.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="c1"&gt;// Register routes&lt;/span&gt;
&lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/src/routes.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;こんな感じでミドルウェアとルーティングの設定を書いていたのですが、&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// Register middleware&lt;/span&gt;
&lt;span class="nv"&gt;$middleware&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/src/middleware.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$middleware&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// Register routes&lt;/span&gt;
&lt;span class="nv"&gt;$routes&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;require&lt;/span&gt; &lt;span class="k"&gt;__DIR__&lt;/span&gt; &lt;span class="mf"&gt;.&lt;/span&gt; &lt;span class="s1"&gt;'/src/routes.php'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="nv"&gt;$routes&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Slim4アプリを引数で指定して設定するように変更しました。
&lt;code&gt;$app&lt;/code&gt; をグローバル参照から引数参照するコールバック関数に変わったぐらいです。&lt;/p&gt;

&lt;h4&gt;Basic認証の修正&lt;/h4&gt;

&lt;p&gt;登録済みのデバイスからデータを受信するAPIでは、Basic認証ミドルウェアを設定していて、 &lt;code&gt;callback&lt;/code&gt; という処理が呼び出されることになっていました。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="c1"&gt;// For Registered Devices&lt;/span&gt;
&lt;span class="c1"&gt;//&lt;/span&gt;
&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/api/devices/{id}/values'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'\ToiletEvolution\Controllers\DeviceValuesController:add'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nf"&gt;Slim\Middleware\HttpBasicAuthentication&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
        &lt;span class="s2"&gt;"authenticator"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ToiletEvolution\Middlewares\HttpBasicAuthentication\DeviceAuthenticator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContainer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DeviceStore'&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
        &lt;span class="s2"&gt;"callback"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$arguments&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
          &lt;span class="nv"&gt;$route&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getAttribute&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'route'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$route&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getArgument&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
          &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$arguments&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
        &lt;span class="p"&gt;},&lt;/span&gt;
        &lt;span class="s2"&gt;"secure"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
      &lt;span class="p"&gt;]));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Slim4でのBasic認証では &lt;code&gt;before&lt;/code&gt; が呼び出される様に変わっています。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;  &lt;span class="c1"&gt;//&lt;/span&gt;
  &lt;span class="c1"&gt;// For Registered Devices&lt;/span&gt;
  &lt;span class="c1"&gt;//&lt;/span&gt;
  &lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'/api/devices/{id}/values'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'\ToiletEvolution\Controllers\DeviceValuesController:add'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nf"&gt;Tuupola\Middleware\HttpBasicAuthentication&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
          &lt;span class="s2"&gt;"authenticator"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;ToiletEvolution\Middlewares\HttpBasicAuthentication\DeviceAuthenticator&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$app&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getContainer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'DeviceStore'&lt;/span&gt;&lt;span class="p"&gt;)),&lt;/span&gt;
          &lt;span class="s2"&gt;"before"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$arguments&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$arguments&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'id'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$id&lt;/span&gt; &lt;span class="o"&gt;===&lt;/span&gt; &lt;span class="nv"&gt;$arguments&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'user'&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
          &lt;span class="p"&gt;},&lt;/span&gt;
          &lt;span class="s2"&gt;"secure"&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
        &lt;span class="p"&gt;]));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;コントローラーの修正&lt;/h4&gt;

&lt;p&gt;APIでJSONを返却するときの処理が標準ではなくなったので、JSON文字列を出力する &lt;code&gt;JsonRenderer&lt;/code&gt; のようなクラスを作ります。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kn"&gt;namespace&lt;/span&gt; &lt;span class="nn"&gt;ToiletEvolution\Renderer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;Psr\Http\Message\ResponseInterface&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;final&lt;/span&gt; &lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;JsonRenderer&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="cd"&gt;/**
     * Write JSON to the response body.
     *
     * This method prepares the response object to return an HTTP JSON
     * response to the client.
     *
     * @param ResponseInterface $response The response
     * @param mixed $data The data
     *
     * @return ResponseInterface The response
     */&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="kt"&gt;ResponseInterface&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="kt"&gt;mixed&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;ResponseInterface&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nv"&gt;$response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;withHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Content-Type'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;'application/json'&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getBody&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="nb"&gt;json_encode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="no"&gt;JSON_UNESCAPED_SLASHES&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="no"&gt;JSON_PARTIAL_OUTPUT_ON_ERROR&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;で、それをコントローラのコンストラクタで初期化して、APIメソッドで呼び出します。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DevicesController&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;protected&lt;/span&gt; &lt;span class="kt"&gt;ContainerInterface&lt;/span&gt; &lt;span class="nv"&gt;$ci&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="k"&gt;private&lt;/span&gt; &lt;span class="kt"&gt;JsonRenderer&lt;/span&gt; &lt;span class="nv"&gt;$renderer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__construct&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;ContainerInterface&lt;/span&gt; &lt;span class="nv"&gt;$ci&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ci&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$ci&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;renderer&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;JsonRenderer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;

  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;ServerRequestInterface&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;ResponseInterface&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;array&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$deviceModel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ci&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Device&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$device&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;toArrayWithoutSecret&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nv"&gt;$deviceModel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;renderer&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;withStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="mi"&gt;204&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Slim3 では以下のようなコードで &lt;code&gt;$response-&amp;gt;withJson&lt;/code&gt; でよかったところが変更になっています。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$args&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$deviceModel&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;ci&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nc"&gt;Device&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nv"&gt;$data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;array_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$device&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$device&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;toArrayWithoutSecret&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="nv"&gt;$deviceModel&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;all&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;withJson&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="mi"&gt;204&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;ミドルウェアの修正&lt;/h4&gt;

&lt;p&gt;PSR の書き方が変わっているので、それに応じて修正しています。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RequireLoginMiddleware&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$next&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'current_user'&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;$response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;
        &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;withStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;302&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;withHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Location'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;redirectIfNotLogin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;$response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$next&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;    
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;こんな感じだったのが、以下のように変更になっています。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;RequireLoginMiddleware&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;__invoke&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;Request&lt;/span&gt; &lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;RequestHandler&lt;/span&gt; &lt;span class="nv"&gt;$handler&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="kt"&gt;ResponseInterface&lt;/span&gt;
  &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nv"&gt;$response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nc"&gt;Response&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;empty&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'current_user'&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;$response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;
        &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;withStatus&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;302&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;withHeader&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'Location'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;redirectIfNotLogin&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;
    &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="nv"&gt;$response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;$handler&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;handle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$request&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$response&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;引数が変更になっていて、 &lt;code&gt;$response&lt;/code&gt; がなくなって、次のミドルウェアへ処理を引き継ぐのが &lt;code&gt;$next&lt;/code&gt; から &lt;code&gt;$handler&lt;/code&gt;  に変わっています。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$response&lt;/code&gt; はミドルウェアごとに作成して設定していきます。
次のミドルウェアに引き継ぐときは、 &lt;code&gt;$handler-&amp;gt;handle&lt;/code&gt; で呼び出してレスポンスを取得します。&lt;/p&gt;

&lt;h3&gt;さいごに&lt;/h3&gt;

&lt;p&gt;Slim3 から Slim4 への移行手順がインターネットに多くあって助かりました。
また Slim 関連の OSS パッケージも 3 から 4 への移行をドキュメントにしてくれていたので、比較的スムーズに移行できたと思います。&lt;/p&gt;

&lt;p&gt;ここではその一部を紹介する感じになりましたが、同じような対応をする人に役立つ内容になっていれば嬉しいです。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>GAE gen1 で動いている PHP5.5 で作った個人開発サービスを gen2 PHP8.2 へ移行した1年記 〜 その 3</title>
    <link rel="alternate" href="http://blog.url.com/2024/04/30/story-for-migrate-hobby-web-service-while-a-year-part-3.html"/>
    <id>http://blog.url.com/2024/04/30/story-for-migrate-hobby-web-service-while-a-year-part-3.html</id>
    <published>2024-04-30T13:20:00+09:00</published>
    <updated>2024-04-30T13:46:33+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;この記事は &lt;a href="2024/03/20/story-for-migrate-hobby-web-service-while-a-year-part-2.html"&gt;GAE gen1 で動いている PHP5.5 で作った個人開発サービスを gen2 PHP8.2 へ移行した1年記 〜 その 2&lt;/a&gt; の続編となります。&lt;/p&gt;

&lt;p&gt;前回は PHPUnit を最新化して通過するところまで実施したので、今回は GitHub Actions で CI できるようにしていきます。&lt;/p&gt;

&lt;h3&gt;GitHub Actions と Google Cloud を連携する&lt;/h3&gt;

&lt;p&gt;&lt;a href="https://github.com/google-github-actions/auth"&gt;Authenticate to Google Cloud from GitHub Actions&lt;/a&gt; というリポジトリがあって、Actions から gcloud 関係の CLI ツールを動かす前に認証を通過させる方法が書いてあります。&lt;/p&gt;

&lt;p&gt;Actionsが通過するようになったPRが&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/18"&gt;こちら&lt;/a&gt; 。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.google.com/blog/ja/products/identity-security/enabling-keyless-authentication-from-github-actions"&gt;GitHub Actions からのキーなしの認証の有効化&lt;/a&gt; という公式ドキュメントに加え、先ほども紹介したリポジトリのREADMEを併せて読むと簡単に環境構築できるようになります。&lt;/p&gt;

&lt;p&gt;環境構築ができたら Actions の yaml ファイルを定義していくだけです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;ソースコードをチェックアウト&lt;/li&gt;
&lt;li&gt;&lt;code&gt;google-github-actions/auth&lt;/code&gt; で認証&lt;/li&gt;
&lt;li&gt;&lt;code&gt;google-github-actions/setup-gcloud&lt;/code&gt; で gcloud コマンドをセットアップ&lt;/li&gt;
&lt;li&gt;PHP8.2環境のセットアップ&lt;/li&gt;
&lt;li&gt;composer アクションで依存関係を解決&lt;/li&gt;
&lt;li&gt;gcloud コマンド実行&lt;/li&gt;
&lt;li&gt;PHPUnit 実行&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;のような手順にしました。&lt;/p&gt;

&lt;h3&gt;さいごに&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;google-github-actions/auth&lt;/code&gt; の認証方法が変更になっているので最新に追従しないといけないので、おいおい対応していきます。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>GAE gen1 で動いている PHP5.5 で作った個人開発サービスを gen2 PHP8.2 へ移行した1年記 〜 その 2</title>
    <link rel="alternate" href="http://blog.url.com/2024/03/20/story-for-migrate-hobby-web-service-while-a-year-part-2.html"/>
    <id>http://blog.url.com/2024/03/20/story-for-migrate-hobby-web-service-while-a-year-part-2.html</id>
    <published>2024-03-20T14:58:00+09:00</published>
    <updated>2024-04-30T13:19:59+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;この記事は &lt;a href="2024/03/20/story-for-migrate-hobby-web-service-while-a-year-part-1.html"&gt;GAE gen1 で動いている PHP5.5 で作った個人開発サービスを gen2 PHP8.2 へ移行した1年記 〜 その 1&lt;/a&gt; の続編となります。&lt;/p&gt;

&lt;h3&gt;単体テストを通過するようにアップグレード&lt;/h3&gt;

&lt;p&gt;やることは多そうだなというのは想像していたのですが、いざ取り掛かろうとしたとき頼りになるのは単体テストだな、ということでPHPUnitとPHPのバージョンを上げて、テストが通過するように修正していきます。&lt;/p&gt;

&lt;p&gt;テストが通過するようになったコミットが&lt;a href="https://github.com/toiletevolution/toiletevolution-server/pull/20/commits/0a73d2d12bd05bd4a67e80a60e9f64f682416529"&gt;こちら&lt;/a&gt; 。&lt;/p&gt;

&lt;h4&gt;composer の依存バージョンを変更&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;PHPのバージョンを8.2以上へ&lt;/li&gt;
&lt;li&gt;PHPUnitのバージョンを10.1.3（当時最新）へ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その関連で合わせてあげないといけない依存もバージョンup。&lt;/p&gt;

&lt;h4&gt;PHPUnit の実行方法を変更&lt;/h4&gt;

&lt;p&gt;以前は GAE の内部コンポーネントに依存していたので、PHPUnitを実行するのも dev_appserver.py を起動してからそのインスタンス内の PHPUnit 実行スクリプトを経由して実行していたのですが、GAE gen2 ではPHPスクリプトの起動自体が &lt;code&gt;php -S&lt;/code&gt; に変わったりしたこともあり、PHPUnitもComposer スクリプトから直接実行するように変更しました。&lt;/p&gt;

&lt;p&gt;以前は dev_appserver 経由で起動されていたデータストアとキャッシュについては、docker と gcloud emulator で起動してから PHPUnit を実行するように変更しました。&lt;/p&gt;

&lt;p&gt;実行手順をREADMEにも記述。&lt;/p&gt;

&lt;p&gt;ここで、レガシーランタイム脱却のため Memcache を Redis に変更する対応も入っています。
当初は Memcache を変更せずに PHPUnit が通過してから移行する予定だったのですが、 &lt;code&gt;GeckoPackages\MemcacheMock&lt;/code&gt; が終了していて、最新のPHP/PHPUnitで動作しないことがわかったのでこのタイミングで一緒に移行を決断しました。&lt;/p&gt;

&lt;h4&gt;簡単なアーキテクチャと既存テストコード&lt;/h4&gt;

&lt;p&gt;Toilet Evolution は PHP Slim Framework に、Google Datastore を使用（&lt;a href="https://cloud.google.com/appengine/docs/standard/using-firestore-in-datastore-mode?hl=ja&amp;amp;tab=php"&gt;DatastoreモードのFirestoreを使用&lt;/a&gt;）しています。
REST API を通じてデバイスからトイレの利用状況をデータストアやキャッシュに格納したり、Webアプリから利用状況を閲覧できるAPI が用意されています。&lt;/p&gt;

&lt;p&gt;テストコードは、データストアとキャッシュのI/O、PSRのミドルウェア部分にあって、主なロジックはこのあたりに集中しています。&lt;/p&gt;

&lt;h4&gt;テストコードの記述を修正&lt;/h4&gt;

&lt;p&gt;PHPUnit のテストケース（クラス）の宣言を修正&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// PHP5.5 / PHPUnit 4.8&lt;/span&gt;
&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DeviceTest&lt;/span&gt; &lt;span class="k"&gt;extends&lt;/span&gt; &lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="n"&gt;PHPUnit_Framework_TestCase&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;

&lt;span class="c1"&gt;// PHP8.2 / PHPUnit 10.1.3&lt;/span&gt;
&lt;span class="kn"&gt;use&lt;/span&gt; &lt;span class="nc"&gt;PHPUnit\Framework\TestCase&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DeviceTest&lt;/span&gt; &lt;span class="kd"&gt;extends&lt;/span&gt; &lt;span class="nc"&gt;TestCase&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;setUp を before に変更&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// PHP5.5 / PHPUnit 4.8&lt;/span&gt;
&lt;span class="k"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;setUp&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

&lt;span class="c1"&gt;// PHP8.2 / PHPUnit 10.1.3&lt;/span&gt;
&lt;span class="cd"&gt;/**
 * @before
 */&lt;/span&gt;
&lt;span class="kt"&gt;public&lt;/span&gt; &lt;span class="k"&gt;function&lt;/span&gt; &lt;span class="n"&gt;before&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;assert を &lt;code&gt;$this&lt;/code&gt; 経由で呼び出すように変更&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// PHP5.5 / PHPUnit 4.8&lt;/span&gt;
&lt;span class="nf"&gt;assertEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$results&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// PHP8.2 / PHPUnit 10.1.3&lt;/span&gt;
&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;assertEquals&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;'username'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$results&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Memcache から Redis への記述を修正&lt;/h4&gt;

&lt;p&gt;インスタンスはDIしているので、変数名を memcache から redis に変更した。
メソッドは get / set で同じになるけど、データがオブジェクト形式から文字列に変わるので以下のような対応となった&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight php"&gt;&lt;code&gt;&lt;span class="c1"&gt;// GAE gen1&lt;/span&gt;
&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;memcache&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"device:id:&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$device&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getKeyId&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;$device&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="c1"&gt;// GAE gen2&lt;/span&gt;
&lt;span class="nv"&gt;$this&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;redis&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"device:id:&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nv"&gt;$device&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="nf"&gt;getKeyId&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nb"&gt;serialize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;$device&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;データを set するときは &lt;code&gt;serialize&lt;/code&gt; して、 get するときは &lt;code&gt;unserialize&lt;/code&gt; するように変更している。&lt;/p&gt;

&lt;h4&gt;このぐらいで PHPUnit がうごくようになった&lt;/h4&gt;

&lt;p&gt;Warining は出てるんですが、PHPUnit がエラーで落ちることはなくなりました。
これはバージョンアップ意外と楽チンなのでは？！と勘違いしたのは言うまでもなく、この連載もまだ続きます。&lt;/p&gt;

&lt;p&gt;ここで勘違いしたので、心も折れず続けられたというのはあるかもしれないと振り返り思うのでした。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>GAE gen1 で動いている PHP5.5 で作った個人開発サービスを gen2 PHP8.2 へ移行した1年記 〜 その 1</title>
    <link rel="alternate" href="http://blog.url.com/2024/03/20/story-for-migrate-hobby-web-service-while-a-year-part-1.html"/>
    <id>http://blog.url.com/2024/03/20/story-for-migrate-hobby-web-service-while-a-year-part-1.html</id>
    <published>2024-03-20T12:34:00+09:00</published>
    <updated>2024-04-30T13:19:59+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;2023年2月3日にGoogle Cloudからメールが届きました。&lt;/p&gt;

&lt;p&gt;&lt;img src="/images/blog/gae-gen1-support-mail.png" alt="" /&gt;&lt;/p&gt;

&lt;p&gt;ここで作っていた個人開発のサービスとは &lt;a href="https://toiletevolution.space/#/about"&gt;Toilet Evolution&lt;/a&gt; です。一時期に流行ったトイレ利用状況可視化のIoTサービスです。&lt;/p&gt;

&lt;p&gt;PHP + Web Components の SPA 構成でできていて、Google App Engine（以下GAE）の第一世代で動いています。
当時ほぼ無料で動かせるPaaSというのはあまりなくて、GAEばかりを選択していたと記憶しています。
その後 Heroku とか出ましたけど、実質それなりの利用で月100円もかからずに運用しつづけられている状況なのでありがたいです。&lt;/p&gt;

&lt;p&gt;&lt;a href="https://cloud.google.com/appengine/docs/standard/lifecycle/support-schedule?hl=ja"&gt;GAEのランタイム サポート スケジュール&lt;/a&gt; によると PHP5.5 は 2024年1月30日にサポートの終了で、非推奨が2026年1月31日ということ。廃止は書かれていません。&lt;/p&gt;

&lt;p&gt;と同時にまだ使っている人もいるので、簡単にメンテ大変なんでクローズしますというのも違いますね。ユーザー大事。ありがたや。&lt;/p&gt;

&lt;p&gt;そこで、サポート終了状態でずっと動かすのもなと思い、最新版のPHPへの移行を検討し始めました。&lt;/p&gt;

&lt;h3&gt;一番最後のメンテナンス&lt;/h3&gt;

&lt;p&gt;このWebサービスは長いことやっているのですが、直近で記事にしたのは &lt;a href="/2019/04/28/toilet-evolution-polymer3-vol4.html"&gt;Toilet EvolutionのフロントエンドをPolymer3対応する(4)&lt;/a&gt; で、2019年4月。あのあとコロナがあっての5年ぶりのメンテになります。&lt;/p&gt;

&lt;h3&gt;移行前の composer.json&lt;/h3&gt;

&lt;p&gt;以下のような依存バージョンでした。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre class="highlight json"&gt;&lt;code&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"php"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&amp;gt;=5.5.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"slim/slim"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^3.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"monolog/monolog"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.17"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"tomwalder/php-gds"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"tuupola/slim-basic-auth"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"nesbot/carbon"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.21"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"league/oauth2-client"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.4"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"league/oauth2-google"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"akrabat/rka-slim-session-middleware"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2.0.0-RC1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"sizuhiko/slim3-csrf-utilities"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"dev-master"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"justinrainbow/json-schema"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.0"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"phpunit/phpunit"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^4.8"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"helmich/phpunit-psr7-assert"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"gecko-packages/gecko-memcache-mock"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^2.1"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt;
    &lt;/span&gt;&lt;span class="nl"&gt;"google/appengine-php-sdk"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"^1.9"&lt;/span&gt;&lt;span class="w"&gt;    
&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;歴史を感じますね。&lt;/p&gt;

&lt;h3&gt;GAE gen1 から gen2 で何が変わるのか&lt;/h3&gt;

&lt;p&gt;GAEでの移行ガイドが出ていて、PHPだと &lt;a href="https://cloud.google.com/appengine/migration-center/standard/migrate-to-second-gen/php-differences?hl=ja"&gt;PHP 5.5 と PHP 7 / 8 の違い&lt;/a&gt; というドキュメントがあります。&lt;/p&gt;

&lt;p&gt;PHP公式ドキュメントの移行ガイドへのリンクと、GAE特有のアップグレードガイドが書かれています。
タイトルだけ拾うと、以下のような移行が必要になるということでした。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;app.yaml ファイルを移行する&lt;/li&gt;
&lt;li&gt;ランタイム制限の緩和&lt;/li&gt;
&lt;li&gt;App Engine の PHP SDK から移行する（レガシーバンドルサービスAPI利用方法）&lt;/li&gt;
&lt;li&gt;ローカルでの実行方法&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;レガシーバンドルサービスとは &lt;a href="https://cloud.google.com/appengine/docs/standard/php-gen2/services/access?hl=ja"&gt;PHP 7 / 8 用の以前のバンドル サービスにアクセスする&lt;/a&gt; で書かれているサービスで、今回のサービスで言うと Memcache とセッションを利用していました。&lt;/p&gt;

&lt;p&gt;で、これらは使えるので、使い続けて良いのか？という選択を迫られます。
もう少し関連するドキュメントを読んでみましょう。
&lt;a href="https://cloud.google.com/appengine/docs/standard/bundled-services-overview?hl=ja"&gt;以前のバンドル サービスの概要&lt;/a&gt; によると&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;レガシー ランタイムの一部はオープンソース コミュニティで管理されなくなったため、App Engine デベロッパーは、新しいランタイムに移行すべきかどうか難しい判断に迫られる可能性があります。こうした移行には時間と労力がかかりますが、レガシー ランタイムの使用を継続すれば、アプリの維持コストが増大する結果になります。
こうした課題を踏まえ、Google Cloud では新しいランタイムへの移行パスを段階的に提供していく予定です。Google Cloud では、ランタイム移行の複雑さを軽減するために、Python 3、Java 11、Go 1.12 以降、PHP 7 / 8 などの第 2 世代ランタイムで App Engine の従来のバンドル サービスとその関連 API をサポートしています。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;移行大変なんで段階的な移行パスを用意するよってことですね。
Memcache はこの移行バスに入ったようでそのままでも利用できたんですが、あとでまた移行するのが面倒そうなんで、このタイミングでやっておきたいと考えました。&lt;/p&gt;

&lt;p&gt;レガシーランタイムからの移行に関してのドキュメントは &lt;a href="https://cloud.google.com/appengine/migration-center/standard/services/migrating-services?hl=ja&amp;amp;tab=php"&gt;レガシー バンドル サービスからの移行&lt;/a&gt; にあって、参考になります。&lt;/p&gt;

&lt;h3&gt;実行目標&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;PHPのバージョンを最新化する&lt;/li&gt;
&lt;li&gt;GAEのレガシーランタイムからの脱却&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;というのを掲げてみました。&lt;/p&gt;

&lt;p&gt;けど、PHP自体あんまり触ってない（たぶん7を少しやったぐらいで、実質5系の知識で止まっている）ため、長期戦は予想していました。当時はまだ1年ぐらいあるから何とかなるやろ、ぐらいに思っていた自分がいました。&lt;/p&gt;

&lt;p&gt;そして、その後の1年ぐらいで移行を完了させて、現在は GAE gen2 の PHP8.2 で稼働しています。👏👏&lt;/p&gt;

&lt;p&gt;このあと数回にわたって、どうやって移行してきたかをコミットログと共にふりかえっていきたいと思います。
少しでも PHP のバージョンアップや GAE gen2 へ移行する人の助けになればな、と思っています。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>PHPカンファレンス関西2024に参加して、オフラインカンファレンスの盛り上がりを体験してきた</title>
    <link rel="alternate" href="http://blog.url.com/2024/02/18/php-conference-kansai-2024.html"/>
    <id>http://blog.url.com/2024/02/18/php-conference-kansai-2024.html</id>
    <published>2024-02-18T12:40:00+09:00</published>
    <updated>2024-04-30T13:19:59+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;大阪自体はそれほど久しぶりではないけど、東京以外のカンファレンスにリアル参加するのは久しぶりだった。
ブログを振り返ると、&lt;a href="/2019/10/13/phpcon-okinawa-2019.html"&gt;PHPカンファレンス沖縄2019で、 標準インターフェースを使ったアプリケーション開発について発表してきました&lt;/a&gt;がコロナ前最後に参加した地域PHP conであったようだ。
大阪へは藤井風のパナスタライブ以来なので、1年半ぶりぐらい。&lt;/p&gt;

&lt;h3&gt;このところのホテル事情&lt;/h3&gt;

&lt;p&gt;昨年秋のシルバーウィークに九州まで車でスカイラインを巡る旅をしてきて、ホテルの混雑状況とか把握していたつもりでしたが、今回はやばかった。
ちょうど3連休開催ということで、ホテルの値段がやばい。大阪ではいつも宿泊する本町のホテルが早々に売り切れててどうしよう？となりましたが、
運よくリニューアルしたばかりの東横inn淀屋橋駅南が空いてて、普段の東横価格だったので安心できました。&lt;/p&gt;

&lt;h3&gt;前夜祭への参加&lt;/h3&gt;

&lt;p&gt;さらに前日入りをすることにしていたのですが、午前中に東京で用事があったので &lt;a href="https://connpass.com/event/309163/"&gt;【非公式！前夜祭】 PHPカンファレンス関西2024&lt;/a&gt; へも新幹線に乗るタイミングで間に合いそうだったので参加表明するという慌ただしさ。&lt;/p&gt;

&lt;p&gt;前夜祭で他の人の発表を聞いていて、自分も何か話したいなーという欲が出てきたので、その場でスライドをさくさくと作ってWebアクセシビリティの話をしました。
いろいろなところで4月から義務化？！とか言われてますが、実際のところどうなのよ？みたいなところを。
最新関係する仕事もしていてかなり調べたので、気になっている人もいるのでは？と思ったのです。&lt;/p&gt;

&lt;p&gt;かつてはカンファレンスを開催していた大阪産業創造館という場所も懐かしかった。&lt;/p&gt;

&lt;p&gt;前夜祭を楽しんだ後は、最近大阪に来たら必ずいく Bar で飲んでちゃんと終電ではホテルに戻りました。&lt;/p&gt;

&lt;h3&gt;カンファレンス当日&lt;/h3&gt;

&lt;p&gt;今回はあまり普段登壇で見かけない人の発表を聞く、久しぶりに会うコミュニティメンバーと会話する、という2つの目的で参加していました。
どちらも当初の見込みは達成できて、たくさんの刺激をもらいました。
午後は主にアンカンファレンスの会場にいて、枠も空いていたので前夜祭で話した内容をまたやってみたりと、聞くだけでなく積極的にイベントにも参加しました。
ちゃんとスポンサークイズにも応募したよ！（半分ぐらいは聴けてなかったので勘で回答しちゃいましたがw）&lt;/p&gt;

&lt;p&gt;懇親会 -&amp;gt; 2次会 -&amp;gt; ホテルそばで1人3次会 をやって終了。
翌日の月曜日も3連休ということで休みでしたが、東京で推しのライブがあるのでお昼には新幹線に乗り込みました。
いつものネギ焼きは新幹線のフードコードで&lt;/p&gt;

&lt;p&gt;&lt;blockquote class="twitter-tweet"&gt;&lt;p lang="ja" dir="ltr"&gt;いつもの(本店ではないが &lt;a href="https://t.co/YfGW0D6zAf"&gt;pic.twitter.com/YfGW0D6zAf&lt;/a&gt;&lt;/p&gt;&amp;mdash; しずひこ (@sizuhiko) &lt;a href="https://twitter.com/sizuhiko/status/1756862605984239984?ref_src=twsrc%5Etfw"&gt;February 12, 2024&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src="https://platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;

&lt;p&gt;あ、その前にもちろん聖地巡礼（阪急梅田のタイガースショップ）もして、グッズも買いました。&lt;/p&gt;

&lt;h3&gt;久しぶりの地域カンファレンスに参加してのまとめ&lt;/h3&gt;

&lt;p&gt;昨年のPHPカンファレンス福岡に始まり、地域カンファレンスの開催も戻ってきて、今回の大阪に久しぶりに参加しました。
大阪のPHPcon自体は &lt;a href="/2018/08/03/phpcon-kansai-2018.html"&gt;PHPカンファレンス関西2018に参加してGAEに継続的デプロイする方法について発表してきました&lt;/a&gt; のとき以来で、今回はこのときの登壇者Tシャツを来て参加しました。&lt;/p&gt;

&lt;p&gt;つまり関西では 6年ぶりということですね。
オフライン開催のPHP系カンファレンスに関しても昨年の福岡などより前となると、おそらく &lt;a href="/2020/02/21/phperkaigi-2020.html"&gt;PHPerKaigi 2020で「E2Eテストに向き合う」ついて発表してきました&lt;/a&gt; このときの PHPerKaigi がコロナ前最後であったという記憶があります。&lt;/p&gt;

&lt;p&gt;それでも4年。
つまり6年以上前からコミュニティに参加していた関西圏の人以外はほぼ初参加となるわけです。&lt;/p&gt;

&lt;p&gt;今年は月刊PHPカンファレンスなんて言葉が出るぐらいですが、それも昨年の福岡に始まった地域カンファレンスの楽しさから触発されたもので、しばらく行われてこなかった反動だったり、この4から6年の間に新たにこの業界で働き始めた人たちの新しい交流の場なんだなというのを実感しました。&lt;/p&gt;

&lt;p&gt;今回のPHPCon関西ではいくつもの素晴らしい取り組みがありました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="https://note.com/phpcon_kansai/"&gt;公式 note&lt;/a&gt; で発信&lt;/li&gt;
&lt;li&gt;PHPerシール&lt;/li&gt;
&lt;li&gt;お誘いチケット&lt;/li&gt;
&lt;li&gt;おすすめトーク診断&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まず公式 note は X だけで発信していると流れてしまいそうな情報に簡単にアクセスできるのもあり、良いなーと思いました。
困ったら note 見る、みたいな動線がある。もちろん公式HPに載せるのもありなんで、そこは運用の手間がどちらが少ないかという判断もあるでしょう。&lt;/p&gt;

&lt;p&gt;続いて PHPerシール。こちらは2020のPHPerKaigiで行われていたトレーディングカードにインスパイアされたものだと思いますが、積極的に交流できるようにするアイテムとしてとても良いと思いました。スピーカーにはレアカードがあったりしたのも良かったと思います。&lt;/p&gt;

&lt;p&gt;お誘いチケットは有料イベントで参加を迷っている人を誘いやすい仕組みとして良いなと思いました。
PHPerシールとか当日の交流の仕組みがあっても、まず参加してくれないと届きませんね。&lt;/p&gt;

&lt;p&gt;おすすめトーク診断も、誘ってもらったり紹介してもらったので参加するけど、カンファレンスの歩き方ってわからんな？という人も向けて楽しみながら参加できる仕掛けだったと思います。&lt;/p&gt;

&lt;p&gt;つまりPHP関西自体に初参加、ましてやコロナで勉強会を含めオフラインのイベントそのものに初参加ということが6年というブランクから容易に想像できる環境での地域コミュニティの盛り上げ方に優れた戦略が練られていたことがわかります。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;お誘いチケットで誘って参加してもらい&lt;/li&gt;
&lt;li&gt;おすすめトーク診断で当日迷わないようにして&lt;/li&gt;
&lt;li&gt;PHPer シールで当日は交流してもらう&lt;/li&gt;
&lt;li&gt;なんなら X のアカウント持ってなかったけど、シール経由で作ってもらって今後の交流やPHP関西からの発信を受け取ってもらえるようにする&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;委員長の閉会の挨拶でもこれらを話されていましたが、関西でのPHPコミュニティを盛り上げたいという熱い想いを聞いて、また来年開催されたら参加したいな、発表もしてみたいなと思いました。&lt;/p&gt;

&lt;p&gt;久しぶりということで運営の経験値とかもリセットされた中での開催だったと思うけど、そういうのを感じさせない良いカンファレンスでした。
参加のみなさま、久しぶりに再会したみなさま。そして何より運営のみなさまありがとうございました。&lt;/p&gt;
</content>
  </entry>
</feed>
